name: Build and Install the CGV framework

on: push

jobs:
  build-ubuntu:
    name: "Ubuntu: Build and Install the CGV framework"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install llvm repository
        run: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 12 && sudo apt-get update

      - name: Install build tools
        run: sudo apt-get install -y cmake clang-tools-12 libclang-12-dev

      - name: Install cgv dependencies
        run: sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev libx11-dev xorg-dev

      - run: mkdir build

      - name: Run CMake
        working-directory: ./build
        run: cmake .. -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=/usr/bin/clang-12 -D CMAKE_CXX_COMPILER=/usr/bin/clang++-12 -D CMAKE_INSTALL_PREFIX=../install

      - name: Build and Install
        uses: GabrielBB/xvfb-action@v1
        with:
          run: cmake --build . --target install
          working-directory: ./build

      - name: Upload Install zip for Ubuntu
        uses: actions/upload-artifact@v2
        with:
          name: cgv-install-ubuntu
          path: ./install

  build-windows:
    name: "Windows: Build and Install the CGV framework"
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Set up environment variables
        run: |
          "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"

      - run: mkdir build

      - name: Run CMake
        working-directory: build
        run: cmake .. -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=../install

      - name: Build and Install
        working-directory: ./build
        run: cmake --build . --target install

      - name: Upload Install zip for Windows
        uses: actions/upload-artifact@v2
        with:
          name: cgv-install-windows
          path: ./install

  release:
    name: "Create Release"
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-windows]
    steps:
      - uses: actions/download-artifact@v2

      - run: zip -r cgv-install-ubuntu.zip cgv-install-ubuntu/
      - run: zip -r cgv-install-windows.zip cgv-install-windows/

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cgv-install-ubuntu.zip
            cgv-install-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
